<?php
require_once(dirname(__FILE__).'/zp-core/folder-definitions.php');
define('OFFSET_PATH', 0);
require_once(ZENFOLDER . "/template-functions.php");
//require_once(ZENFOLDER . "/functions-rss.php");
if(!getOption('zp_plugin_zenphoto-sitemap-extended')) {
	header("HTTP/1.0 404 Not Found");
	header("Status: 404 Not Found");
	include(ZENFOLDER. '/404.php');
	exit();
} 
startSitemapCache(true);
// Output content type and charset
header('Content-Type: text/xml;charset=utf-8');
// Output XML file headers, and plug the plugin :)
echonl('<?xml version="1.0" encoding="UTF-8"?>');
echonl('<!-- Sitemap generated by zenphoto-sitemap: http://tenzer.dk/open-source/zenphoto-sitemap -->');
echonl('<urlset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd" xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">');
// Create an array, which all the URLs for gallery pages are going to be insert into
$urls = array();

// Add the front page of the gallery to the URL list
echonl("\t<url>\n\t\t<loc>".FULLWEBPATH."</loc>\n\t\t<lastmod>".date('Y-m-d')."</lastmod>\n\t\t<changefreq>daily</changefreq>\n\t</url>");
// password check required because subalbums inherit passwords from parents!
$passwordcheck = '';
$albumscheck = query_full_array("SELECT * FROM " . prefix('albums'). " ORDER BY title");
foreach($albumscheck as $albumcheck) {
	if(!checkAlbumPassword($albumcheck['folder'], $hint)) { //TODO If done as a single file this throws an fatal error because the internally used zp_loggedin() is still not defined
		$albumpasswordcheck= " AND id != ".$albumcheck['id'];
		$passwordcheck = $passwordcheck.$albumpasswordcheck;
	}
}
$albumWhere = "WHERE `dynamic`=0 AND `show`=1".$passwordcheck;
// Find public albums
$albums = query_full_array('SELECT `folder`,`date` FROM ' . prefix('albums') . $albumWhere);
foreach($albums as $album) {
	$albumobj = new Album($_zp_gallery,$album['folder']);
	$urls[] = FULLWEBPATH.'/'.rewrite_path(pathurlencode($album['folder']),'?album='.pathurlencode($album['folder']),false);
	$images = $albumobj->getImages();
	foreach($images as $image) {
		$date = substr($album['date'],0,10);
		$path = FULLWEBPATH.'/'.rewrite_path(pathurlencode($album['folder']),'?album='.pathurlencode($album['folder']).'&amp;image='.urlencode($image['filename']),false);
		echonl("\t<url>\n\t\t<loc>".$path."</loc>\n\t\t<lastmod>".$date."</lastmod>\n\t\t<changefreq>daily</changefreq>\n\t</url>");
	}
}
// Optional Zenpage stuff
if(getOption('zp_plugin_zenpage')) {
	//Zenpage pages
	$pages = getPages(true);
	foreach($pages as $page) {
		$pageobj = new ZenpagePage($page['titlelink']);
		$date = substr($pageobj->getDatetime(),0,10);
		$path = FULLWEBPATH.'/'.rewrite_path(ZENPAGE_PAGES.'/'.urlencode($page['titlelink']),'?p='.ZENPAGE_PAGES.'&amp;title='.urlencode($page['titlelink']),false);
		echonl("\t<url>\n\t\t<loc>".$path."</loc>\n\t\t<lastmod>".$date."</lastmod>\n\t\t<changefreq>weekly</changefreq>\n\t</url>");
	}
	//Zenpage news articles
	$articles = query_full_array("SELECT titlelink, `date` FROM ".prefix('zenpage_news'));// normally getNewsArticles() should be user but has currently a bug in 1.2.9 regarding getting all articles...
	foreach($articles as $article) {
		$date = substr($article['date'],0,10);
		$path = FULLWEBPATH.'/'.rewrite_path(ZENPAGE_NEWS.'/'.urlencode($article['titlelink']),'?p='.ZENPAGE_NEWS.'&amp;title=' . urlencode($article['titlelink']),false);
		echonl("\t<url>\n\t\t<loc>".$path."</loc>\n\t\t<lastmod>".$date."</lastmod>\n\t\t<changefreq>daily</changefreq>\n\t</url>");
	}
	//Zenpage news categories
	$newscats = getAllCategories();
	// Add the correct URLs to the URL list
	foreach($newscats as $newscat) {
		$path = FULLWEBPATH.'/'.rewrite_path(ZENPAGE_NEWS.'/category/'.urlencode($newscat['cat_link']),'?p='.ZENPAGE_NEWS.'&amp;category=' . urlencode($newscat['cat_link']),false);
		echonl("\t<url>\n\t\t<loc>".$path."</loc>\n\t\t<changefreq>weekly</changefreq>\n\t</url>");
	}
}
// End off the <urlset> tag
echonl('</urlset>');
endSitemapCache(true);